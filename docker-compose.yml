version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    environment:
      POSTGRES_DB: onboarding
      POSTGRES_USER: onboarding
      POSTGRES_PASSWORD: onboarding
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U onboarding -d onboarding"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  scorer:
    build:
      context: ./scorer
      dockerfile: Dockerfile
    environment:
      SCORER_PORT: 8000
      INTERNAL_SCORER_TOKEN: dev-internal-token
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    environment:
      PORT: 3001
      API_KEY: dev-api-key
      INTERNAL_SCORER_URL: http://scorer:8000
      INTERNAL_SCORER_TOKEN: dev-internal-token
      PGHOST: postgres
      PGPORT: 5432
      PGDATABASE: onboarding
      PGUSER: onboarding
      PGPASSWORD: onboarding
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ""
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      scorer:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgres_data: